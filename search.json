[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 HiCExperiment authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/HiCExperiment.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to HiCExperiment","text":"Hi-C experimental approach allows one query contact frequency possible pairs genomic loci simultaneously, genome-wide manner. output next-generation sequencing-supported technique file describing every pair (.k.contact, interaction) two genomic loci. -called “pairs” file can binned transformed numerical matrix. matrix, cell contains raw normalized interaction frequency pair genomic loci (location can retrieved using corresponding column row indices). HiC-Pro, distiller Juicer three main pipelines used align, filter process paired-end fastq reads pairs files contact matrices. pipeline defined file formats store two types files. Pairs files (gzipped) human-readable, text files variant BEDPE format; however column order varies depending pipeline used. Contact matrix file formats greatly vary depending pipeline: HiC-Pro generates two human-readable files: regions file describing genomic interval, matrix file quantifying interaction frequency pairs loci regions file, using standard triplet sparse matrix format. Juicer generates .hic file, highly compressed binary file storing sparse contact matrices multiple resolutions single file. distiller uses .(m)cool format, sparse, compressed, binary genomic matrix data model built HDF5. file format can contain roughly information, albeit largely improved compression .hic .(m)cool files, can also contain multi-resolution matrices compared HiC-Pro derived files. 4DN consortium, deciphering role nuclear organization plays gene expression cellular function, officially supports .hic .(m)cool formats. Furthermore, .(m)cool format recently gained lot traction release series python packages (cooler, cooltools, pairtools, coolpuppy) Open2C organization facilitating investigation Hi-C data stored .(m)cool files python environment. R HiCExperiment package aims unlocking HiC investigation within rich, genomic-oriented Bioconductor environment. provides set classes import functions parse HiC files (contact matrices pairs) R, allowing random access efficient genome-based subsetting contact matrices. leverages pre-existing base Bioconductor classes, notably GInteractions ContactMatrix classes (Lun, Perry & Ing-Simmons, F1000 Research 2016).","code":""},{"path":"/articles/HiCExperiment.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to HiCExperiment","text":"HiCExperiment package can installed Bioconductor using following command: R dependencies installed automatically.","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"HiCExperiment\")"},{"path":"/articles/HiCExperiment.html","id":"the-hicexperiment-class","dir":"Articles","previous_headings":"","what":"The HiCExperiment class","title":"Introduction to HiCExperiment","text":"","code":"library(HiCExperiment) showClass(\"HiCExperiment\") #> Class \"HiCExperiment\" [package \"HiCExperiment\"] #>  #> Slots: #>                                                                    #> Name:             fileName               focus         resolutions #> Class:           character     characterOrNULL             numeric #>                                                                    #> Name:           resolution        interactions              scores #> Class:             numeric       GInteractions          SimpleList #>                                                                    #> Name:  topologicalFeatures           pairsFile            metadata #> Class:          SimpleList     characterOrNULL                list #>  #> Extends: \"Annotated\" #>  #> Known Subclasses: \"AggrHiCExperiment\" hic <- contacts_yeast() #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache hic #> `HiCExperiment` object with 8,757,906 contacts over 763 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"whole genome\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 16000  #> interactions: 267709  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0) centromeres(16)  #> pairsFile: N/A  #> metadata(0):"},{"path":[]},{"path":"/articles/HiCExperiment.html","id":"import-methods","dir":"Articles","previous_headings":"Basics: importing .(m)cool, .hic or HiC-Pro-generated files as HiCExperiment objects","what":"Import methods","title":"Introduction to HiCExperiment","text":"implemented import() methods allow one import Hi-C matrix files R HiCExperiment objects. give real-life examples, use HiContactsData package get access range toy datasets available ExperimentHub.","code":"hic <- import(     \"path/to/contact_matrix.cool\",      focus = \"chr:start-end\",      resolution = ... ) library(HiContactsData) cool_file <- HiContactsData('yeast_wt', format = 'cool') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache import(cool_file, format = 'cool') #> `HiCExperiment` object with 8,757,906 contacts over 12,079 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4173a1b392a_7751\"  #> focus: \"whole genome\"  #> resolutions(1): 1000 #> active resolution: 1000  #> interactions: 2945692  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: N/A  #> metadata(0):"},{"path":"/articles/HiCExperiment.html","id":"supporting-file-classes","dir":"Articles","previous_headings":"Basics: importing .(m)cool, .hic or HiC-Pro-generated files as HiCExperiment objects","what":"Supporting file classes","title":"Introduction to HiCExperiment","text":"currently three main standards store Hi-C matrices files: .(m)cool files .hic files .matrix .bed files: generated HiC-Pro. Three supporting classes specifically created ensure file structures properly parsed HiCExperiment objects: CoolFile HicFile HicproFile object, optional pairsFile can associated linked contact matrix file imported HiCExperiment object.","code":"## --- CoolFile pairs_file <- HiContactsData('yeast_wt', format = 'pairs.gz') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache coolf <- CoolFile(cool_file, pairsFile = pairs_file) coolf #> CoolFile object #> .mcool file: /github/home/.cache/R/ExperimentHub/4173a1b392a_7751  #> resolution: 1000  #> pairs file: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0): import(coolf) #> `HiCExperiment` object with 8,757,906 contacts over 12,079 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4173a1b392a_7751\"  #> focus: \"whole genome\"  #> resolutions(1): 1000 #> active resolution: 1000  #> interactions: 2945692  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0): import(pairsFile(coolf), format = 'pairs') #> GInteractions object with 471364 interactions and 3 metadata columns: #>            seqnames1   ranges1     seqnames2   ranges2 |     frag1     frag2 #>                <Rle> <IRanges>         <Rle> <IRanges> | <numeric> <numeric> #>        [1]        II       105 ---        II     48548 |      1358      1681 #>        [2]        II       113 ---        II     45003 |      1358      1658 #>        [3]        II       119 ---        II    687251 |      1358      5550 #>        [4]        II       160 ---        II     26124 |      1358      1510 #>        [5]        II       169 ---        II     39052 |      1358      1613 #>        ...       ...       ... ...       ...       ... .       ...       ... #>   [471360]        II    808605 ---        II    809683 |      6316      6320 #>   [471361]        II    808609 ---        II    809917 |      6316      6324 #>   [471362]        II    808617 ---        II    809506 |      6316      6319 #>   [471363]        II    809447 ---        II    809685 |      6319      6321 #>   [471364]        II    809472 ---        II    809675 |      6319      6320 #>             distance #>            <integer> #>        [1]     48443 #>        [2]     44890 #>        [3]    687132 #>        [4]     25964 #>        [5]     38883 #>        ...       ... #>   [471360]      1078 #>   [471361]      1308 #>   [471362]       889 #>   [471363]       238 #>   [471364]       203 #>   ------- #>   regions: 549331 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## --- HicFile hic_file <- HiContactsData('yeast_wt', format = 'hic') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache hicf <- HicFile(hic_file, pairsFile = pairs_file) hicf #> HicFile object #> .hic file: /github/home/.cache/R/ExperimentHub/41730d6949_7836  #> resolution: 1000  #> pairs file: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0): import(hicf) #> `HiCExperiment` object with 13,681,280 contacts over 12,165 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/41730d6949_7836\"  #> focus: \"whole genome\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 1000  #> interactions: 2965693  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0):  ## --- HicproFile hicpro_matrix_file <- HiContactsData('yeast_wt', format = 'hicpro_matrix') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache hicpro_regions_file <- HiContactsData('yeast_wt', format = 'hicpro_bed') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache hicprof <- HicproFile(hicpro_matrix_file, bed = hicpro_regions_file) hicprof #> HicproFile object #> HiC-Pro files: #>   $ matrix:   /github/home/.cache/R/ExperimentHub/417304c9f09_7837  #>   $ regions:  /github/home/.cache/R/ExperimentHub/417588c191e_7838  #> resolution: 1000  #> pairs file:  #> metadata(0): import(hicprof) #> `HiCExperiment` object with 9,503,604 contacts over 12,165 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/417304c9f09_7837\"  #> focus: \"whole genome\"  #> resolutions(1): 1000 #> active resolution: 1000  #> interactions: 2686250  #> scores(1): count  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: N/A  #> metadata(1): regions"},{"path":[]},{"path":"/articles/HiCExperiment.html","id":"querying-subsets-of-hi-c-matrix-files","dir":"Articles","previous_headings":"Import arguments","what":"Querying subsets of Hi-C matrix files","title":"Introduction to HiCExperiment","text":"focus argument used specifically import contacts within genomic locus interest. Note: Querying subsets HiC-Pro formatted matrices currently supported. HiC-Pro formatted matrices systematically fully imported memory imported. One can also extract count matrix Hi-C matrix file centered diagonal. , specify couple coordinates focus argument using character string formatted \"...|...\":","code":"availableChromosomes(cool_file) #> Seqinfo object with 16 sequences from an unspecified genome: #>   seqnames seqlengths isCircular genome #>   I            230218       <NA>   <NA> #>   II           813184       <NA>   <NA> #>   III          316620       <NA>   <NA> #>   IV          1531933       <NA>   <NA> #>   V            576874       <NA>   <NA> #>   ...             ...        ...    ... #>   XII         1078177       <NA>   <NA> #>   XIII         924431       <NA>   <NA> #>   XIV          784333       <NA>   <NA> #>   XV          1091291       <NA>   <NA> #>   XVI          948066       <NA>   <NA> hic <- import(cool_file, format = 'cool',  focus = 'I:20001-80000') hic #> `HiCExperiment` object with 24,322 contacts over 60 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4173a1b392a_7751\"  #> focus: \"I:20,001-80,000\"  #> resolutions(1): 1000 #> active resolution: 1000  #> interactions: 1653  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: N/A  #> metadata(0): focus(hic) #> [1] \"I:20001-80000\" hic <- import(cool_file, format = 'cool', focus = 'II:1-500000|II:100001-300000') focus(hic) #> [1] \"II:1-500000|II:100001-300000\""},{"path":"/articles/HiCExperiment.html","id":"multi-resolution-hi-c-matrix-files","dir":"Articles","previous_headings":"Import arguments","what":"Multi-resolution Hi-C matrix files","title":"Introduction to HiCExperiment","text":"import() works .mcool multi-resolution .hic files well: case, user can specify resolution count values recovered.","code":"mcool_file <- HiContactsData('yeast_wt', format = 'mcool') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache availableResolutions(mcool_file) #> resolutions(5): 1000 2000 4000 8000 16000 #>  availableChromosomes(mcool_file) #> Seqinfo object with 16 sequences from an unspecified genome: #>   seqnames seqlengths isCircular genome #>   I            230218       <NA>   <NA> #>   II           813184       <NA>   <NA> #>   III          316620       <NA>   <NA> #>   IV          1531933       <NA>   <NA> #>   V            576874       <NA>   <NA> #>   ...             ...        ...    ... #>   XII         1078177       <NA>   <NA> #>   XIII         924431       <NA>   <NA> #>   XIV          784333       <NA>   <NA> #>   XV          1091291       <NA>   <NA> #>   XVI          948066       <NA>   <NA> hic <- import(mcool_file, format = 'cool', focus = 'II:1-800000', resolution = 2000) hic #> `HiCExperiment` object with 466,123 contacts over 400 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"II:1-800,000\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 2000  #> interactions: 33479  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: N/A  #> metadata(0):"},{"path":[]},{"path":"/articles/HiCExperiment.html","id":"slots","dir":"Articles","previous_headings":"HiCExperiment accessors","what":"Slots","title":"Introduction to HiCExperiment","text":"Slots HiCExperiment object can accessed using following getters: Several extra functions available well:","code":"fileName(hic) #> [1] \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\" focus(hic) #> [1] \"II:1-800000\" resolutions(hic) #> [1]  1000  2000  4000  8000 16000 resolution(hic) #> [1] 2000 interactions(hic) #> GInteractions object with 33479 interactions and 4 metadata columns: #>           seqnames1       ranges1     seqnames2       ranges2 |   bin_id1 #>               <Rle>     <IRanges>         <Rle>     <IRanges> | <numeric> #>       [1]        II        1-2000 ---        II        1-2000 |       116 #>       [2]        II        1-2000 ---        II     4001-6000 |       116 #>       [3]        II        1-2000 ---        II     6001-8000 |       116 #>       [4]        II        1-2000 ---        II    8001-10000 |       116 #>       [5]        II        1-2000 ---        II   10001-12000 |       116 #>       ...       ...           ... ...       ...           ... .       ... #>   [33475]        II 794001-796000 ---        II 796001-798000 |       513 #>   [33476]        II 794001-796000 ---        II 798001-800000 |       513 #>   [33477]        II 796001-798000 ---        II 796001-798000 |       514 #>   [33478]        II 796001-798000 ---        II 798001-800000 |       514 #>   [33479]        II 798001-800000 ---        II 798001-800000 |       515 #>             bin_id2     count  balanced #>           <numeric> <numeric> <numeric> #>       [1]       116         1       NaN #>       [2]       118         2       NaN #>       [3]       119         3       NaN #>       [4]       120        15       NaN #>       [5]       121         9       NaN #>       ...       ...       ...       ... #>   [33475]       514       309 0.1194189 #>   [33476]       515       227 0.0956207 #>   [33477]       514       130 0.0501703 #>   [33478]       515       297 0.1249314 #>   [33479]       515       117 0.0536429 #>   ------- #>   regions: 400 ranges and 4 metadata columns #>   seqinfo: 16 sequences from an unspecified genome scores(hic) #> List of length 2 #> names(2): count balanced tail(scores(hic, 1)) #> [1] 212 309 227 130 297 117 tail(scores(hic, 'balanced')) #> [1] 0.08204677 0.11941893 0.09562069 0.05017035 0.12493137 0.05364290 topologicalFeatures(hic) #> List of length 4 #> names(4): compartments borders loops viewpoints pairsFile(hic) #> NULL metadata(hic) #> list() seqinfo(hic) ## To recover the `Seqinfo` object from the `.(m)cool` file #> Seqinfo object with 16 sequences from an unspecified genome: #>   seqnames seqlengths isCircular genome #>   I            230218       <NA>   <NA> #>   II           813184       <NA>   <NA> #>   III          316620       <NA>   <NA> #>   IV          1531933       <NA>   <NA> #>   V            576874       <NA>   <NA> #>   ...             ...        ...    ... #>   XII         1078177       <NA>   <NA> #>   XIII         924431       <NA>   <NA> #>   XIV          784333       <NA>   <NA> #>   XV          1091291       <NA>   <NA> #>   XVI          948066       <NA>   <NA> bins(hic) ## To bin the genome at the current resolution #> GRanges object with 6045 ranges and 2 metadata columns: #>                     seqnames        ranges strand |    bin_id    weight #>                        <Rle>     <IRanges>  <Rle> | <numeric> <numeric> #>            I_1_2000        I        1-2000      * |         0 0.0559613 #>         I_2001_4000        I     2001-4000      * |         1 0.0333136 #>         I_4001_6000        I     4001-6000      * |         2 0.0376028 #>         I_6001_8000        I     6001-8000      * |         3 0.0369553 #>        I_8001_10000        I    8001-10000      * |         4 0.0220139 #>                 ...      ...           ...    ... .       ...       ... #>   XVI_940001_942000      XVI 940001-942000      * |      6040 0.0226033 #>   XVI_942001_944000      XVI 942001-944000      * |      6041       NaN #>   XVI_944001_946000      XVI 944001-946000      * |      6042       NaN #>   XVI_946001_948000      XVI 946001-948000      * |      6043       NaN #>   XVI_948001_948066      XVI 948001-948066      * |      6044       NaN #>   ------- #>   seqinfo: 16 sequences from an unspecified genome regions(hic) ## To extract unique regions of the contact matrix #> GRanges object with 400 ranges and 4 metadata columns: #>                    seqnames        ranges strand |    bin_id    weight   chr #>                       <Rle>     <IRanges>  <Rle> | <numeric> <numeric> <Rle> #>          II_1_2000       II        1-2000      * |       116       NaN    II #>       II_2001_4000       II     2001-4000      * |       117       NaN    II #>       II_4001_6000       II     4001-6000      * |       118       NaN    II #>       II_6001_8000       II     6001-8000      * |       119       NaN    II #>      II_8001_10000       II    8001-10000      * |       120 0.0461112    II #>                ...      ...           ...    ... .       ...       ...   ... #>   II_790001_792000       II 790001-792000      * |       511 0.0236816    II #>   II_792001_794000       II 792001-794000      * |       512 0.0272236    II #>   II_794001_796000       II 794001-796000      * |       513 0.0196726    II #>   II_796001_798000       II 796001-798000      * |       514 0.0196450    II #>   II_798001_800000       II 798001-800000      * |       515 0.0214123    II #>                       center #>                    <integer> #>          II_1_2000      1000 #>       II_2001_4000      3000 #>       II_4001_6000      5000 #>       II_6001_8000      7000 #>      II_8001_10000      9000 #>                ...       ... #>   II_790001_792000    791000 #>   II_792001_794000    793000 #>   II_794001_796000    795000 #>   II_796001_798000    797000 #>   II_798001_800000    799000 #>   ------- #>   seqinfo: 16 sequences from an unspecified genome anchors(hic) ## To extract \"first\" and \"second\" anchors for each interaction #> $first #> GRanges object with 33479 ranges and 4 metadata columns: #>           seqnames        ranges strand |    bin_id    weight   chr    center #>              <Rle>     <IRanges>  <Rle> | <numeric> <numeric> <Rle> <integer> #>       [1]       II        1-2000      * |       116       NaN    II      1000 #>       [2]       II        1-2000      * |       116       NaN    II      1000 #>       [3]       II        1-2000      * |       116       NaN    II      1000 #>       [4]       II        1-2000      * |       116       NaN    II      1000 #>       [5]       II        1-2000      * |       116       NaN    II      1000 #>       ...      ...           ...    ... .       ...       ...   ...       ... #>   [33475]       II 794001-796000      * |       513 0.0196726    II    795000 #>   [33476]       II 794001-796000      * |       513 0.0196726    II    795000 #>   [33477]       II 796001-798000      * |       514 0.0196450    II    797000 #>   [33478]       II 796001-798000      * |       514 0.0196450    II    797000 #>   [33479]       II 798001-800000      * |       515 0.0214123    II    799000 #>   ------- #>   seqinfo: 16 sequences from an unspecified genome #>  #> $second #> GRanges object with 33479 ranges and 4 metadata columns: #>           seqnames        ranges strand |    bin_id    weight   chr    center #>              <Rle>     <IRanges>  <Rle> | <numeric> <numeric> <Rle> <integer> #>       [1]       II        1-2000      * |       116       NaN    II      1000 #>       [2]       II     4001-6000      * |       118       NaN    II      5000 #>       [3]       II     6001-8000      * |       119       NaN    II      7000 #>       [4]       II    8001-10000      * |       120 0.0461112    II      9000 #>       [5]       II   10001-12000      * |       121 0.0334807    II     11000 #>       ...      ...           ...    ... .       ...       ...   ...       ... #>   [33475]       II 796001-798000      * |       514 0.0196450    II    797000 #>   [33476]       II 798001-800000      * |       515 0.0214123    II    799000 #>   [33477]       II 796001-798000      * |       514 0.0196450    II    797000 #>   [33478]       II 798001-800000      * |       515 0.0214123    II    799000 #>   [33479]       II 798001-800000      * |       515 0.0214123    II    799000 #>   ------- #>   seqinfo: 16 sequences from an unspecified genome"},{"path":[]},{"path":"/articles/HiCExperiment.html","id":"scores","dir":"Articles","previous_headings":"HiCExperiment accessors > Slot setters","what":"Scores","title":"Introduction to HiCExperiment","text":"Add scores metric using numerical vector.","code":"scores(hic, 'random') <- runif(length(hic)) scores(hic) #> List of length 3 #> names(3): count balanced random tail(scores(hic, 'random')) #> [1] 0.44730265 0.03170161 0.15799766 0.37698142 0.12925036 0.06454072"},{"path":"/articles/HiCExperiment.html","id":"features","dir":"Articles","previous_headings":"HiCExperiment accessors > Slot setters","what":"Features","title":"Introduction to HiCExperiment","text":"Add topologicalFeatures using GRanges Pairs.","code":"topologicalFeatures(hic, 'viewpoints') <- GRanges(\"II:300001-320000\") topologicalFeatures(hic) #> List of length 4 #> names(4): compartments borders loops viewpoints topologicalFeatures(hic, 'viewpoints') #> GRanges object with 1 range and 0 metadata columns: #>       seqnames        ranges strand #>          <Rle>     <IRanges>  <Rle> #>   [1]       II 300001-320000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"/articles/HiCExperiment.html","id":"coercing-hicexperiment","dir":"Articles","previous_headings":"HiCExperiment accessors","what":"Coercing HiCExperiment","title":"Introduction to HiCExperiment","text":"Using () function, HiCExperiment can coerced GInteractions, ContactMatrix matrix seamlessly.","code":"as(hic, \"GInteractions\") #> GInteractions object with 33479 interactions and 5 metadata columns: #>           seqnames1       ranges1     seqnames2       ranges2 |   bin_id1 #>               <Rle>     <IRanges>         <Rle>     <IRanges> | <numeric> #>       [1]        II        1-2000 ---        II        1-2000 |       116 #>       [2]        II        1-2000 ---        II     4001-6000 |       116 #>       [3]        II        1-2000 ---        II     6001-8000 |       116 #>       [4]        II        1-2000 ---        II    8001-10000 |       116 #>       [5]        II        1-2000 ---        II   10001-12000 |       116 #>       ...       ...           ... ...       ...           ... .       ... #>   [33475]        II 794001-796000 ---        II 796001-798000 |       513 #>   [33476]        II 794001-796000 ---        II 798001-800000 |       513 #>   [33477]        II 796001-798000 ---        II 796001-798000 |       514 #>   [33478]        II 796001-798000 ---        II 798001-800000 |       514 #>   [33479]        II 798001-800000 ---        II 798001-800000 |       515 #>             bin_id2     count  balanced    random #>           <numeric> <numeric> <numeric> <numeric> #>       [1]       116         1       NaN  0.735735 #>       [2]       118         2       NaN  0.173380 #>       [3]       119         3       NaN  0.545839 #>       [4]       120        15       NaN  0.164250 #>       [5]       121         9       NaN  0.287491 #>       ...       ...       ...       ...       ... #>   [33475]       514       309 0.1194189 0.0317016 #>   [33476]       515       227 0.0956207 0.1579977 #>   [33477]       514       130 0.0501703 0.3769814 #>   [33478]       515       297 0.1249314 0.1292504 #>   [33479]       515       117 0.0536429 0.0645407 #>   ------- #>   regions: 400 ranges and 4 metadata columns #>   seqinfo: 16 sequences from an unspecified genome as(hic, \"ContactMatrix\") #> class: ContactMatrix  #> dim: 400 400  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(0): #> regions: 400 as(hic, \"matrix\")[1:10, 1:10] #> 10 x 10 sparse Matrix of class \"dgTMatrix\" #>                                                                            #>  [1,] NaN . NaN NaN        NaN        NaN        NaN        NaN        NaN #>  [2,]   . .   .   . .          .          .          .          .          #>  [3,] NaN .   . NaN        NaN        NaN        NaN        NaN        NaN #>  [4,] NaN . NaN NaN        NaN        NaN        NaN        NaN        NaN #>  [5,] NaN . NaN NaN 0.08079721 0.18680431 0.13127403 0.08833001 0.06759757 #>  [6,] NaN . NaN NaN 0.18680431 0.08183011 0.19176749 0.12687633 0.10078115 #>  [7,] NaN . NaN NaN 0.13127403 0.19176749 0.08040523 0.13690173 0.13249106 #>  [8,] NaN . NaN NaN 0.08833001 0.12687633 0.13690173 0.07977117 0.18151495 #>  [9,] NaN . NaN NaN 0.06759757 0.10078115 0.13249106 0.18151495 0.06494950 #> [10,] NaN . NaN NaN 0.06021225 0.07728955 0.09404388 0.12720548 0.11622354 #>                  #>  [1,]        NaN #>  [2,] .          #>  [3,]        NaN #>  [4,]        NaN #>  [5,] 0.06021225 #>  [6,] 0.07728955 #>  [7,] 0.09404388 #>  [8,] 0.12720548 #>  [9,] 0.11622354 #> [10,] 0.06796588 as(hic, \"data.frame\")[1:10, ] #>    seqnames1 start1 end1 width1 strand1 bin_id1 weight1 center1 seqnames2 #> 1         II      1 2000   2000       *     116     NaN    1000        II #> 2         II      1 2000   2000       *     116     NaN    1000        II #> 3         II      1 2000   2000       *     116     NaN    1000        II #> 4         II      1 2000   2000       *     116     NaN    1000        II #> 5         II      1 2000   2000       *     116     NaN    1000        II #> 6         II      1 2000   2000       *     116     NaN    1000        II #> 7         II      1 2000   2000       *     116     NaN    1000        II #> 8         II      1 2000   2000       *     116     NaN    1000        II #> 9         II      1 2000   2000       *     116     NaN    1000        II #> 10        II      1 2000   2000       *     116     NaN    1000        II #>    start2  end2 width2 strand2 bin_id2    weight2 center2 count balanced #> 1       1  2000   2000       *     116        NaN    1000     1      NaN #> 2    4001  6000   2000       *     118        NaN    5000     2      NaN #> 3    6001  8000   2000       *     119        NaN    7000     3      NaN #> 4    8001 10000   2000       *     120 0.04611120    9000    15      NaN #> 5   10001 12000   2000       *     121 0.03348075   11000     9      NaN #> 6   12001 14000   2000       *     122 0.03389168   13000     6      NaN #> 7   14001 16000   2000       *     123 0.04164320   15000     1      NaN #> 8   16001 18000   2000       *     124 0.01954625   17000     2      NaN #> 9   18001 20000   2000       *     125 0.02331795   19000     6      NaN #> 10  20001 22000   2000       *     126 0.02241734   21000     5      NaN #>       random #> 1  0.7357345 #> 2  0.1733796 #> 3  0.5458387 #> 4  0.1642497 #> 5  0.2874908 #> 6  0.7192559 #> 7  0.9771468 #> 8  0.8039764 #> 9  0.7948708 #> 10 0.6320320"},{"path":"/articles/HiCExperiment.html","id":"importing-pairs-files","dir":"Articles","previous_headings":"","what":"Importing pairs files","title":"Introduction to HiCExperiment","text":"Pairs files typically contain chimeric pairs (filtered mapping), corresponding loci religated together restriction enzyme digestion. files variety standards. .pairs file format, supported 4DN consortium:  [] pairs format generated Juicer: []  [] [] [] .()validPairs file format, defined HiC-Pro pipeline:  [] Pairs different formats automatically detected imported R import function:","code":"import(pairs_file, format = 'pairs') #> GInteractions object with 471364 interactions and 3 metadata columns: #>            seqnames1   ranges1     seqnames2   ranges2 |     frag1     frag2 #>                <Rle> <IRanges>         <Rle> <IRanges> | <numeric> <numeric> #>        [1]        II       105 ---        II     48548 |      1358      1681 #>        [2]        II       113 ---        II     45003 |      1358      1658 #>        [3]        II       119 ---        II    687251 |      1358      5550 #>        [4]        II       160 ---        II     26124 |      1358      1510 #>        [5]        II       169 ---        II     39052 |      1358      1613 #>        ...       ...       ... ...       ...       ... .       ...       ... #>   [471360]        II    808605 ---        II    809683 |      6316      6320 #>   [471361]        II    808609 ---        II    809917 |      6316      6324 #>   [471362]        II    808617 ---        II    809506 |      6316      6319 #>   [471363]        II    809447 ---        II    809685 |      6319      6321 #>   [471364]        II    809472 ---        II    809675 |      6319      6320 #>             distance #>            <integer> #>        [1]     48443 #>        [2]     44890 #>        [3]    687132 #>        [4]     25964 #>        [5]     38883 #>        ...       ... #>   [471360]      1078 #>   [471361]      1308 #>   [471362]       889 #>   [471363]       238 #>   [471364]       203 #>   ------- #>   regions: 549331 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"/articles/HiCExperiment.html","id":"further-documentation","dir":"Articles","previous_headings":"","what":"Further documentation","title":"Introduction to HiCExperiment","text":"Please check ?HiCExperiment R full description available slots, getters setters, comprehensive examples interaction HiCExperiment object.","code":""},{"path":"/articles/HiCExperiment.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to HiCExperiment","text":"","code":"sessionInfo() #> R Under development (unstable) (2023-03-02 r83926) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] HiCExperiment_0.99.10 HiContactsData_1.1.9  ExperimentHub_2.7.1   #>  [4] AnnotationHub_3.7.3   BiocFileCache_2.7.2   dbplyr_2.3.1          #>  [7] GenomicRanges_1.51.4  GenomeInfoDb_1.35.15  IRanges_2.33.0        #> [10] S4Vectors_0.37.4      BiocGenerics_0.45.0   dplyr_1.1.0           #> [13] BiocStyle_2.27.1      #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.0              blob_1.2.3                    #>  [3] filelock_1.0.2                Biostrings_2.67.0             #>  [5] bitops_1.0-7                  fastmap_1.1.1                 #>  [7] RCurl_1.98-1.10               promises_1.2.0.1              #>  [9] digest_0.6.31                 mime_0.12                     #> [11] lifecycle_1.0.3               ellipsis_0.3.2                #> [13] KEGGREST_1.39.0               interactiveDisplayBase_1.37.0 #> [15] RSQLite_2.3.0                 magrittr_2.0.3                #> [17] compiler_4.3.0                rlang_1.0.6                   #> [19] sass_0.4.5                    tools_4.3.0                   #> [21] utf8_1.2.3                    yaml_2.3.7                    #> [23] knitr_1.42                    bit_4.0.5                     #> [25] curl_5.0.0                    DelayedArray_0.25.0           #> [27] BiocParallel_1.33.9           withr_2.5.0                   #> [29] purrr_1.0.1                   desc_1.4.2                    #> [31] grid_4.3.0                    fansi_1.0.4                   #> [33] xtable_1.8-4                  Rhdf5lib_1.21.0               #> [35] SummarizedExperiment_1.29.1   cli_3.6.0                     #> [37] rmarkdown_2.20                crayon_1.5.2                  #> [39] ragg_1.2.5                    generics_0.1.3                #> [41] tzdb_0.3.0                    httr_1.4.5                    #> [43] rhdf5_2.43.1                  DBI_1.1.3                     #> [45] cachem_1.0.7                  stringr_1.5.0                 #> [47] zlibbioc_1.45.0               parallel_4.3.0                #> [49] AnnotationDbi_1.61.0          BiocManager_1.30.20           #> [51] XVector_0.39.0                matrixStats_0.63.0            #> [53] vctrs_0.5.2                   Matrix_1.5-3                  #> [55] jsonlite_1.8.4                bookdown_0.32                 #> [57] bit64_4.0.5                   systemfonts_1.0.4             #> [59] strawr_0.0.9                  jquerylib_0.1.4               #> [61] glue_1.6.2                    pkgdown_2.0.7                 #> [63] codetools_0.2-19              stringi_1.7.12                #> [65] BiocVersion_3.17.1            later_1.3.0                   #> [67] BiocIO_1.9.2                  tibble_3.1.8                  #> [69] pillar_1.8.1                  rhdf5filters_1.11.1           #> [71] rappdirs_0.3.3                htmltools_0.5.4               #> [73] GenomeInfoDbData_1.2.9        R6_2.5.1                      #> [75] textshaping_0.3.6             rprojroot_2.0.3               #> [77] vroom_1.6.1                   lattice_0.20-45               #> [79] evaluate_0.20                 shiny_1.7.4                   #> [81] Biobase_2.59.0                highr_0.10                    #> [83] png_0.1-8                     memoise_2.0.1                 #> [85] httpuv_1.6.9                  bslib_0.4.2                   #> [87] Rcpp_1.0.10                   InteractionSet_1.27.0         #> [89] xfun_0.37                     fs_1.6.1                      #> [91] MatrixGenerics_1.11.0         pkgconfig_2.0.3"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacques Serizay. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Serizay J (2023). HiCExperiment: Bioconductor class interacting Hi-C files R. R package version 0.99.10, https://github.com/js2264/HiCExperiment.","code":"@Manual{,   title = {HiCExperiment: Bioconductor class for interacting with Hi-C files in R},   author = {Jacques Serizay},   year = {2023},   note = {R package version 0.99.10},   url = {https://github.com/js2264/HiCExperiment}, }"},{"path":"/index.html","id":"hicexperiment","dir":"","previous_headings":"","what":"Bioconductor class for interacting with Hi-C files in R","title":"Bioconductor class for interacting with Hi-C files in R","text":"👉 OHCA book 📖  HiCExperiment package provides unified data structure import three main Hi-C matrix file formats (.(m)cool, .hic HiC-Pro matrices) R performs common array operations . HiCExperiment class wraps (indexed) matrix-like object (.e. -disk .(m)cool, .hic HiC-Pro matrices). indexed matrices (.e. .(m)cool .hic files), HiCExperiment allows one specfically parse subsets contact matrix corresponding genomic loci interest, without load entire object memory. HiCExperiment package also provides methods import pairs files generated pairtools/cooler workflow, HiC-Pro pipeline, type tabular pairs format (indicating columns containing chr1, start1, strand1, chr2, start2, strand2 information). HiCExperiment S4 class built pre-existing Bioconductor classes, namely BiocFile GInteractions (Lun, Perry & Ing-Simmons, F1000Research 2016`), leverages point -disk Hi-C matrix files dynamically parse R. Several packages rely HiCExperiment class provide rich ecosystem interacting Hi-C data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bioconductor class for interacting with Hi-C files in R","text":"HiCExperiment R/Bioconductor package. , can installed :","code":"BiocManager::install(\"HiCExperiment\")"},{"path":[]},{"path":"/index.html","id":"mcool-files","dir":"","previous_headings":"Importing a Hi-C matrix file","what":".(m)cool files:","title":"Bioconductor class for interacting with Hi-C files in R","text":"","code":"cool_file <- CoolFile(HiContactsData::HiContactsData('yeast_wt', format = 'cool')) import(cool_file, focus = \"II:10000-100000\") ## `HiCExperiment` object with 3,454 interactions over 90 regions ## ------- ## fileName: \"/home/rsg/.cache/R/ExperimentHub/36d548fb47bf_7751\" ## focus: \"II:10,000-100,000\" ## resolutions(1): 1000 ## current resolution: 1000 ## interactions: 3454 ## scores(2): count balanced ## topologicalFeatures: loops(0) borders(0) compartments(0) viewpoints(0) ## pairsFile: N/A ## metadata(0): mcool_file <- CoolFile(HiContactsData::HiContactsData('yeast_wt', format = 'mcool')) import(mcool_file, focus = \"II:10000-100000\", resolution = 2000) ## `HiCExperiment` object with 1,004 interactions over 45 regions ## ------- ## fileName: \"/home/rsg/.cache/R/ExperimentHub/36d590c5583_7752\" ## focus: \"II:10,000-100,000\" ## resolutions(5): 1000 2000 4000 8000 16000 ## current resolution: 2000 ## interactions: 1004 ## scores(2): count balanced ## topologicalFeatures: loops(0) borders(0) compartments(0) viewpoints(0) ## pairsFile: N/A ## metadata(0):"},{"path":"/index.html","id":"hic-files","dir":"","previous_headings":"Importing a Hi-C matrix file","what":".hic files:","title":"Bioconductor class for interacting with Hi-C files in R","text":"","code":"hic_file <- HicFile(HiContactsData::HiContactsData('yeast_wt', format = 'hic')) import(hic_file, focus = \"II:10000-100000\", resolution = 4000) ## `HiCExperiment` object with 276 interactions over 23 regions ## ------- ## fileName: \"/home/rsg/.cache/R/ExperimentHub/7fa45373d163_7836\" ## focus: \"II:10,000-100,000\" ## resolutions(5): 1000 2000 4000 8000 16000 ## current resolution: 4000 ## interactions: 276 ## scores(2): count balanced ## topologicalFeatures: loops(0) borders(0) compartments(0) viewpoints(0) ## pairsFile: N/A ## metadata(0):"},{"path":"/index.html","id":"hic-pro-files","dir":"","previous_headings":"Importing a Hi-C matrix file","what":"HiC-Pro files:","title":"Bioconductor class for interacting with Hi-C files in R","text":"","code":"hicpro_file <- HicproFile(     HiContactsData::HiContactsData('yeast_wt', format = 'hicpro_matrix'),     bed = HiContactsData::HiContactsData('yeast_wt', format = 'hicpro_bed') ) import(hicpro_file) ## `HiCExperiment` object with 2,686,250 interactions over 11,805 regions ## ------- ## fileName: \"/home/rsg/.cache/R/ExperimentHub/29210052806_7837\" ## focus: \"whole genome\" ## resolutions(1): 1000 ## current resolution: 1000 ## interactions: 2686250 ## scores(1): counts ## topologicalFeatures: loops(0) borders(0) compartments(0) viewpoints(0) ## pairsFile: N/A ## metadata(1): regions"},{"path":"/index.html","id":"importing-a-pairs-file","dir":"","previous_headings":"","what":"Importing a pairs file","title":"Bioconductor class for interacting with Hi-C files in R","text":".pairs files (e.g. pairtools cooler): .validPairs files (e.g. HiC-Pro pipeline):","code":"pairs_file <- PairsFile(HiContactsData('yeast_wt', format = 'pairs.gz')) import(pairs_file) ## GInteractions object with 471364 interactions and 4 metadata columns: ##            seqnames1   ranges1     seqnames2   ranges2 |    counts     frag1     frag2  distance ##                <Rle> <IRanges>         <Rle> <IRanges> | <integer> <numeric> <numeric> <numeric> ##        [1]        II       105 ---        II     48548 |         1      1358      1681     48443 ##        [2]        II       113 ---        II     45003 |         1      1358      1658     44890 ##        [3]        II       119 ---        II    687251 |         1      1358      5550    687132 ##        [4]        II       160 ---        II     26124 |         1      1358      1510     25964 ##        [5]        II       169 ---        II     39052 |         1      1358      1613     38883 ##        ...       ...       ... ...       ...       ... .       ...       ...       ...       ... ##   [471360]        II    808605 ---        II    809683 |         1      6316      6320      1078 ##   [471361]        II    808609 ---        II    809917 |         1      6316      6324      1308 ##   [471362]        II    808617 ---        II    809506 |         1      6316      6319       889 ##   [471363]        II    809447 ---        II    809685 |         1      6319      6321       238 ##   [471364]        II    809472 ---        II    809675 |         1      6319      6320       203 ##   ------- ##   regions: 549331 ranges and 0 metadata columns ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths hicpro_pairs_file <- PairsFile(HiContactsData('yeast_wt', format = 'hicpro_pairs')) import(hicpro_pairs_file, nrows = 100) ## GInteractions object with 100 interactions and 4 metadata columns: ##         seqnames1   ranges1     seqnames2   ranges2 |    counts     frag1       frag2  distance ##             <Rle> <IRanges>         <Rle> <IRanges> | <integer> <numeric> <character> <numeric> ##     [1]         I        33 ---         I       620 |         1       414     HIC_I_1       587 ##     [2]         I        35 ---       III    301620 |         1       336     HIC_I_1        NA ##     [3]         I        41 ---         I     68853 |         1       352     HIC_I_1     68812 ##     [4]         I        49 ---         I      3233 |         1       311     HIC_I_1      3184 ##     [5]         I        51 ---      VIII    197898 |         1       397     HIC_I_1        NA ##     ...       ...       ... ...       ...       ... .       ...       ...         ...       ... ##    [96]         I       138 ---      VIII    326284 |         1       251     HIC_I_1        NA ##    [97]         I       141 ---         I      2466 |         1       231     HIC_I_1      2325 ##    [98]         I       142 ---         I      2219 |         1       278     HIC_I_1      2077 ##    [99]         I       142 ---        XI    222517 |         1       270     HIC_I_1        NA ##   [100]         I       142 ---        XV    441757 |         1       280     HIC_I_1        NA ##   ------- ##   regions: 158 ranges and 0 metadata columns ##   seqinfo: 15 sequences from an unspecified genome; no seqlengths"},{"path":[]},{"path":"/index.html","id":"hicontacts","dir":"","previous_headings":"The HiCExperiment ecosystem","what":"HiContacts","title":"Bioconductor class for interacting with Hi-C files in R","text":"HiContacts package provides analytical visualization tools investigate Hi-C matrices imported HiCExperiment R. Among features, provides end-user generic functions annotate topological features Hi-C contact map export , notably compartments, domains constrained interactions (-called TADs) focal chromatin loops.","code":""},{"path":"/index.html","id":"hicool","dir":"","previous_headings":"The HiCExperiment ecosystem","what":"HiCool","title":"Bioconductor class for interacting with Hi-C files in R","text":"HiCool package integrates end--end processing workflow, generate multi-resolution balanced contact matrices paired-end fastq files Hi-C experiments. hood, HiCool leverages hicstuff cooler process fastq files .mcool files. hicstuff takes care heavy-lifting, accurately filters non-informative read pairs , retain informative contacts. Two important features HiCool : operability within R ecosystem. relies basilisk set conda environment pinned versions software needs align, filter process read pairs contact matrices. transparency. HiCool generates QC checks logs, embedded HTML files easily inspect quality sample.","code":""},{"path":"/index.html","id":"fourdndata","dir":"","previous_headings":"The HiCExperiment ecosystem","what":"fourDNData","title":"Bioconductor class for interacting with Hi-C files in R","text":"fourDNData (read \"4DN Data\") provides gateway 4DN data portal.","code":""},{"path":"/index.html","id":"hicontactsdata","dir":"","previous_headings":"The HiCExperiment ecosystem","what":"HiContactsData","title":"Bioconductor class for interacting with Hi-C files in R","text":"HiContactsData package provides toy datasets illustrate HiCExperiment ecosystem works.","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Bioconductor class for interacting with Hi-C files in R","text":"use devtools testthat development workflow. Makefile provided automation. New functions documented roxygen2 comments associated tests added inside tests/testthat/. install package development, run make install. run tests, run make test know , run make help development purposes, provide DockerHub-hosted docker image HiCExperiment related packages pre-installed ready--go. new image automatically built every push. top , release, extra docker image built uploaded Github Container Repository.","code":"## To fetch the latest docker image from Docker Hub (for development purposes!) docker pull js2264/hicexperiment:latest ## To start docker image docker run -it js2264/hicexperiment:latest /usr/local/bin/R ## To fetch release-specific docker image from Github Container Repo docker pull ghcr.io/js2264/hicexperiment:0.99.9 ## To start docker image docker run -it ghcr.io/js2264/hicexperiment:0.99.9 /usr/local/bin/R"},{"path":"/reference/AggrHiCExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"AggrHiCExperiment S4 class — AggrHiCExperiment","title":"AggrHiCExperiment S4 class — AggrHiCExperiment","text":"AggrHiCExperiment extends HiCExperiment class.","code":""},{"path":"/reference/AggrHiCExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AggrHiCExperiment S4 class — AggrHiCExperiment","text":"","code":"AggrHiCExperiment(   file,   resolution = NULL,   targets,   flankingBins = 50,   metadata = list(),   topologicalFeatures = S4Vectors::SimpleList(),   pairsFile = NULL,   bed = NULL,   maxDistance = NULL,   BPPARAM = BiocParallel::bpparam() )  # S4 method for AggrHiCExperiment,missing slices(x)  # S4 method for AggrHiCExperiment,character slices(x, name)  # S4 method for AggrHiCExperiment,numeric slices(x, name)  # S4 method for AggrHiCExperiment show(object)"},{"path":"/reference/AggrHiCExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AggrHiCExperiment S4 class — AggrHiCExperiment","text":"file CoolFile plain path Hi-C contact file resolution Resolution use Hi-C contact file targets Set chromosome coordinates interaction counts extracted Hi-C contact file, provided GRanges object (diagnoal-centered loci) GInteractions object (-diagonal coordinates). flankingBins Number bins flank bins containing input targets. metadata list metadata topologicalFeatures topologicalFeatures provided named SimpleList pairsFile Path associated .pairs file bed Path regions file generated HiC-Pro maxDistance Maximum distance use compiling distance decay BPPARAM BiocParallel parameters x, object AggrHiCExperiment object. name name/index slices extract.","code":""},{"path":"/reference/AggrHiCExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AggrHiCExperiment S4 class — AggrHiCExperiment","text":"AggrHiCExperiment object.","code":""},{"path":"/reference/AggrHiCExperiment.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"AggrHiCExperiment S4 class — AggrHiCExperiment","text":"fileName Path Hi-C contact file resolutions Resolutions available Hi-C contact file. resolution Current resolution interactions Genomic Interactions extracted Hi-C contact file scores Available interaction scores. slices Available interaction slices. topologicalFeatures Topological features associated dataset (e.g. loops (\\<Pairs\\>), borders (\\<GRanges\\>), viewpoints (\\<GRanges\\>), etc...) pairsFile Path .pairs file associated Hi-C contact file metadata metadata associated Hi-C contact file.","code":""},{"path":[]},{"path":"/reference/AggrHiCExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AggrHiCExperiment S4 class — AggrHiCExperiment","text":"","code":"fpath <- HiContactsData::HiContactsData('yeast_wt', 'mcool') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache data(centros_yeast) x <- AggrHiCExperiment(   file = fpath,    resolution = 8000,   targets = centros_yeast[c(4, 7)] ) #> Going through preflight checklist... #> Parsing the entire contact matrice as a sparse matrix... #> Modeling distance decay... #> Filtering for contacts within provided targets... x #> `AggrHiCExperiment` object over 2 targets  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: 2 targets  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 8000  #> interactions: 10201  #> scores(4): count balanced expected detrended  #> slices(4): count balanced expected detrended  #> topologicalFeatures: targets(2)  #> pairsFile: N/A  #> metadata(0): slices(x, 'count')[1:10, 1:10, 1] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,] 1364 1054  679  470  571  450  230  132  135    83 #>  [2,]    0  832 1430  646  617  432  232  138  142    90 #>  [3,]    0    0 1457 1575  864  603  290  227  219   123 #>  [4,]    0    0    0 1227 1398  634  356  210  218   109 #>  [5,]    0    0    0    0 1285 1544  678  400  361   226 #>  [6,]    0    0    0    0    0 1261 1479  591  649   381 #>  [7,]    0    0    0    0    0    0 1186 1349  885   433 #>  [8,]    0    0    0    0    0    0    0 1252 1561   489 #>  [9,]    0    0    0    0    0    0    0    0 1245  1313 #> [10,]    0    0    0    0    0    0    0    0    0  1356"},{"path":"/reference/AllGenerics.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic functions — AllGenerics","title":"Generic functions — AllGenerics","text":"Generics functions created HiCExperiment package.","code":""},{"path":"/reference/AllGenerics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic functions — AllGenerics","text":"x Passed corresponding method name Passed corresponding method value Passed corresponding method ... Passed corresponding method","code":""},{"path":"/reference/ContactsFile-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ContactsFile S4 class — ContactsFile-class","title":"ContactsFile S4 class — ContactsFile-class","text":"ContactsFile class describes BiocFile object, pointing location Hi-C matrix file (cool, mcool, hic, hicpro, ...) containing additional slots: resolution: resolution associated mcool file parsed pairsFile: path (plain character) optional pairs file (stored PairsFile object); metadata: list. CoolFile created HiCool, contain two elements: log (path HiCool processing log file) stats (aggregating stats HiCool mapping). ContactsFile methods.","code":""},{"path":"/reference/ContactsFile-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ContactsFile S4 class — ContactsFile-class","text":"path String; path Hi-C matrix file (cool, mcool, hic, hicpro) resolution numeric; resolution use Hi-C matrix file pairsFile String; path pairs file metadata list. object ContactsFile object. x ContactsFile object.","code":""},{"path":"/reference/ContactsFile-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ContactsFile S4 class — ContactsFile-class","text":"resolution numeric value NULL pairsFile PairsFile object metadata list","code":""},{"path":[]},{"path":"/reference/CoolFile-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CoolFile S4 class — CoolFile-class","title":"CoolFile S4 class — CoolFile-class","text":"CoolFile class describes BiocFile object, pointing location Hi-C matrix file (cool, mcool, hic, hicpro, ...) containing additional slots: resolution: resolution associated mcool file parsed pairsFile: path (plain character) optional pairs file (stored PairsFile object); metadata: list. CoolFile created HiCool, contain two elements: log (path HiCool processing log file) stats (aggregating stats HiCool mapping). CoolFile methods.","code":""},{"path":"/reference/CoolFile-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CoolFile S4 class — CoolFile-class","text":"path String; path (m)cool file resolution numeric; resolution use mcool file pairsFile String; path pairs file metadata list; CoolFile object generated HiCool::HiCool, list contains path log file, statistics regarding number pairs obtained hicstuff well arguments hash ID used HiCool. object CoolFile object.","code":""},{"path":[]},{"path":"/reference/CoolFile-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CoolFile S4 class — CoolFile-class","text":"","code":"mcoolPath <- HiContactsData::HiContactsData('yeast_wt', 'mcool') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache pairsPath <- HiContactsData::HiContactsData('yeast_wt', 'pairs.gz') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache cf <- CoolFile(   mcoolPath,    resolution = 2000,    pairsFile = pairsPath,    metadata = list(info = 'Yeast WT Hi-C exp.') ) cf #> CoolFile object #> .mcool file: /github/home/.cache/R/ExperimentHub/4176f55f627_7752  #> resolution: 2000  #> pairs file: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(1): info resolution(cf) #> [1] 2000 pairsFile(cf) #>                                                 EH7703  #> \"/github/home/.cache/R/ExperimentHub/4172feea28a_7753\"  metadata(cf) #> $info #> [1] \"Yeast WT Hi-C exp.\" #>"},{"path":"/reference/HiCExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"HiCExperiment S4 class — HiCExperiment","title":"HiCExperiment S4 class — HiCExperiment","text":"HiCExperiment class describes Hi-C contact files imported R, either HiCExperiment constructor function using import method implemented HiCExperiment package. HiCExperiment methods.","code":""},{"path":"/reference/HiCExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HiCExperiment S4 class — HiCExperiment","text":"","code":"HiCExperiment(   file,   resolution = NULL,   focus = NULL,   metadata = list(),   topologicalFeatures = S4Vectors::SimpleList(compartments = GenomicRanges::GRanges(),     borders = GenomicRanges::GRanges(), loops =     InteractionSet::GInteractions(GenomicRanges::GRanges(), GenomicRanges::GRanges()),     viewpoints = GenomicRanges::GRanges()),   pairsFile = NULL,   bed = NULL )  makeHiCExperimentFromGInteractions(gi)  # S4 method for HiCExperiment resolutions(x)  # S4 method for HiCExperiment resolution(x)  # S4 method for HiCExperiment focus(x)  # S4 method for HiCExperiment,character focus(x) <- value  # S4 method for HiCExperiment,numeric zoom(x, resolution)  # S4 method for HiCExperiment,character refocus(x, focus)  # S4 method for HiCExperiment,missing scores(x)  # S4 method for HiCExperiment,character scores(x, name)  # S4 method for HiCExperiment,numeric scores(x, name)  # S4 method for HiCExperiment,character,numeric scores(x, name) <- value  # S4 method for HiCExperiment,missing topologicalFeatures(x)  # S4 method for HiCExperiment,character topologicalFeatures(x, name)  # S4 method for HiCExperiment,numeric topologicalFeatures(x, name)  # S4 method for HiCExperiment,character,GRangesOrGInteractions topologicalFeatures(x, name) <- value  # S4 method for HiCExperiment pairsFile(x)  # S4 method for HiCExperiment,character pairsFile(x) <- value  # S4 method for HiCExperiment,list metadata(x) <- value  # S4 method for HiCExperiment fileName(object)  # S4 method for HiCExperiment interactions(x, fillout.regions = FALSE)  # S4 method for HiCExperiment,GInteractions interactions(x) <- value  # S4 method for HiCExperiment length(x)  # S4 method for HiCExperiment $(x, name) <- value  # S4 method for HiCExperiment $(x, name)  # S4 method for HiCExperiment,numeric,ANY,ANY [(x, i)  # S4 method for HiCExperiment,logical,ANY,ANY [(x, i)  # S4 method for HiCExperiment,Pairs,ANY,ANY [(x, i)  # S4 method for HiCExperiment,GInteractions,ANY,ANY [(x, i)  # S4 method for HiCExperiment,character,ANY,ANY [(x, i)  # S4 method for HiCExperiment seqinfo(x)  # S4 method for HiCExperiment bins(x)  # S4 method for HiCExperiment anchors(x)  # S4 method for HiCExperiment regions(x)  # S4 method for HiCExperiment cis(x)  # S4 method for HiCExperiment trans(x)"},{"path":"/reference/HiCExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HiCExperiment S4 class — HiCExperiment","text":"file CoolFile plain path Hi-C contact file resolution Resolution use Hi-C contact file focus Chromosome coordinates interaction counts extracted Hi-C contact file, provided character string (e.g. \"II:4000-5000\"). provided, entire Hi-C contact file imported. metadata list metadata topologicalFeatures topologicalFeatures provided named SimpleList pairsFile Path associated .pairs file (optional) bed Path regions file generated HiC-Pro (optional) gi GInteractions object x HiCExperiment object. value Value add topologicalFeatures, scores, pairsFile metadata slots. name Name element access topologicalFeatures scores SimpleLists. object HiCExperiment object. fillout.regions Whehter add missing regions GInteractions' regions? range boolean vector.","code":""},{"path":"/reference/HiCExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HiCExperiment S4 class — HiCExperiment","text":"HiCExperiment object.","code":""},{"path":"/reference/HiCExperiment.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"HiCExperiment S4 class — HiCExperiment","text":"fileName Path Hi-C contact file focus Chr. coordinates interaction counts extracted Hi-C contact file. resolutions Resolutions available Hi-C contact file. resolution Current resolution interactions Genomic Interactions extracted Hi-C contact file scores Available interaction scores. topologicalFeatures Topological features associated dataset (e.g. loops (\\<GInteractions\\>), borders (\\<GRanges\\>), viewpoints (\\<GRanges\\>), etc...) pairsFile Path .pairs file associated Hi-C contact file metadata metadata associated Hi-C contact file.","code":""},{"path":[]},{"path":"/reference/HiCExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HiCExperiment S4 class — HiCExperiment","text":"","code":"##################################################################### ## Create a HiCExperiment object from a disk-stored contact matrix ## #####################################################################  mcool_file <- HiContactsData::HiContactsData(\"yeast_wt\", \"mcool\") #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache pairs_file <- HiContactsData::HiContactsData(\"yeast_wt\", \"pairs.gz\") #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache contacts <- HiCExperiment(     file = mcool_file,      resolution = 8000L,      pairsFile = pairs_file ) contacts #> `HiCExperiment` object with 8,757,906 contacts over 1,517 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"whole genome\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 8000  #> interactions: 801962  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0):  ##################################################################### ## ----- Manually create a HiCExperiment from GInteractions ------ ## #####################################################################  gis <- interactions(contacts)[1:1000] contacts2 <- makeHiCExperimentFromGInteractions(gis) contacts2 #> `HiCExperiment` object with 6,670 contacts over 1,517 regions  #> ------- #> fileName: N/A  #> focus: N/A  #> resolutions(1): 8000 #> active resolution: 8000  #> interactions: 1000  #> scores(2): count balanced  #> topologicalFeatures: ()  #> pairsFile: N/A  #> metadata(0):  ##################################################################### ## -------- Slots present in an HiCExperiment object ------------- ## #####################################################################  fileName(contacts) #> [1] \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\" focus(contacts) #> NULL resolutions(contacts) #> [1]  1000  2000  4000  8000 16000 resolution(contacts) #> [1] 8000 interactions(contacts) #> GInteractions object with 801962 interactions and 4 metadata columns: #>            seqnames1       ranges1     seqnames2       ranges2 |   bin_id1 #>                <Rle>     <IRanges>         <Rle>     <IRanges> | <numeric> #>        [1]         I        1-8000 ---         I        1-8000 |         0 #>        [2]         I        1-8000 ---         I    8001-16000 |         0 #>        [3]         I        1-8000 ---         I   16001-24000 |         0 #>        [4]         I        1-8000 ---         I   24001-32000 |         0 #>        [5]         I        1-8000 ---         I   32001-40000 |         0 #>        ...       ...           ... ...       ...           ... .       ... #>   [801958]       XVI 920001-928000 ---       XVI 928001-936000 |      1513 #>   [801959]       XVI 920001-928000 ---       XVI 936001-944000 |      1513 #>   [801960]       XVI 928001-936000 ---       XVI 928001-936000 |      1514 #>   [801961]       XVI 928001-936000 ---       XVI 936001-944000 |      1514 #>   [801962]       XVI 936001-944000 ---       XVI 936001-944000 |      1515 #>              bin_id2     count  balanced #>            <numeric> <numeric> <numeric> #>        [1]         0       705  0.582493 #>        [2]         1      1260  0.935951 #>        [3]         2       557  0.294491 #>        [4]         3       274  0.174475 #>        [5]         4       291  0.138932 #>        ...       ...       ...       ... #>   [801958]      1514       893  0.515549 #>   [801959]      1515       524  0.275326 #>   [801960]      1514      1317  0.728102 #>   [801961]      1515      1582  0.795995 #>   [801962]      1515      1409  0.645227 #>   ------- #>   regions: 1517 ranges and 4 metadata columns #>   seqinfo: 16 sequences from an unspecified genome scores(contacts) #> List of length 2 #> names(2): count balanced topologicalFeatures(contacts) #> List of length 4 #> names(4): compartments borders loops viewpoints pairsFile(contacts) #>                                                 EH7703  #> \"/github/home/.cache/R/ExperimentHub/4172feea28a_7753\"   ##################################################################### ## ---------------------- Slot getters --------------------------- ## #####################################################################  scores(contacts, 1) |> head() #> [1]  705 1260  557  274  291  214 scores(contacts, 'balanced') |> head() #> [1] 0.58249310 0.93595103 0.29449150 0.17447479 0.13893217 0.09970617 topologicalFeatures(contacts, 1) #> GRanges object with 0 ranges and 0 metadata columns: #>    seqnames    ranges strand #>       <Rle> <IRanges>  <Rle> #>   ------- #>   seqinfo: no sequences  ##################################################################### ## ---------------------- Slot setters --------------------------- ## #####################################################################  scores(contacts, 'random') <- runif(length(contacts)) topologicalFeatures(contacts, 'loops') <- InteractionSet::GInteractions(   GenomicRanges::GRanges('II:15324'),    GenomicRanges::GRanges('II:24310') ) pairsFile(contacts) <- HiContactsData('yeast_wt', 'pairs.gz') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache  ##################################################################### ## ------------------ Subsetting functions ----------------------- ## #####################################################################  contacts[1:100] #> `HiCExperiment` object with 4,140 contacts over 100 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"whole genome\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 8000  #> interactions: 100  #> scores(3): count balanced random  #> topologicalFeatures: compartments(0) borders(0) loops(1) viewpoints(0)  #> pairsFile: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0): contacts['II'] #> `HiCExperiment` object with 471,364 contacts over 102 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"II\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 8000  #> interactions: 4693  #> scores(3): count balanced random  #> topologicalFeatures: compartments(0) borders(0) loops(1) viewpoints(0)  #> pairsFile: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0): contacts[c('II', 'III')] #> `HiCExperiment` object with 632,446 contacts over 142 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"II, III\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 8000  #> interactions: 8502  #> scores(3): count balanced random  #> topologicalFeatures: compartments(0) borders(0) loops(1) viewpoints(0)  #> pairsFile: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0): contacts['II|III'] #> `HiCExperiment` object with 9,092 contacts over 142 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"II:1-813184|III:1-316620\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 8000  #> interactions: 3000  #> scores(3): count balanced random  #> topologicalFeatures: compartments(0) borders(0) loops(1) viewpoints(0)  #> pairsFile: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0): contacts['II:10000-30000|III:50000-90000'] #> `HiCExperiment` object with 11 contacts over 9 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"II:10000-30000|III:50000-90000\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 8000  #> interactions: 4  #> scores(3): count balanced random  #> topologicalFeatures: compartments(0) borders(0) loops(1) viewpoints(0)  #> pairsFile: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(0):  ##################################################################### ## --------------------- Utils functions ------------------------- ## ##################################################################### ## Adapted from other packages  seqinfo(contacts) #> Seqinfo object with 16 sequences from an unspecified genome: #>   seqnames seqlengths isCircular genome #>   I            230218       <NA>   <NA> #>   II           813184       <NA>   <NA> #>   III          316620       <NA>   <NA> #>   IV          1531933       <NA>   <NA> #>   V            576874       <NA>   <NA> #>   ...             ...        ...    ... #>   XII         1078177       <NA>   <NA> #>   XIII         924431       <NA>   <NA> #>   XIV          784333       <NA>   <NA> #>   XV          1091291       <NA>   <NA> #>   XVI          948066       <NA>   <NA> bins(contacts) #> GRanges object with 1517 ranges and 2 metadata columns: #>                     seqnames        ranges strand |    bin_id    weight #>                        <Rle>     <IRanges>  <Rle> | <numeric> <numeric> #>            I_1_8000        I        1-8000      * |         0 0.0287442 #>        I_8001_16000        I    8001-16000      * |         1 0.0258423 #>       I_16001_24000        I   16001-24000      * |         2 0.0183936 #>       I_24001_32000        I   24001-32000      * |         3 0.0221529 #>       I_32001_40000        I   32001-40000      * |         4 0.0166096 #>                 ...      ...           ...    ... .       ...       ... #>   XVI_912001_920000      XVI 912001-920000      * |      1512 0.0122756 #>   XVI_920001_928000      XVI 920001-928000      * |      1513 0.0245536 #>   XVI_928001_936000      XVI 928001-936000      * |      1514 0.0235127 #>   XVI_936001_944000      XVI 936001-944000      * |      1515 0.0213994 #>   XVI_944001_948066      XVI 944001-948066      * |      1516       NaN #>   ------- #>   seqinfo: 16 sequences from an unspecified genome anchors(contacts) #> $first #> GRanges object with 801962 ranges and 4 metadata columns: #>            seqnames        ranges strand |    bin_id    weight   chr    center #>               <Rle>     <IRanges>  <Rle> | <numeric> <numeric> <Rle> <integer> #>        [1]        I        1-8000      * |         0 0.0287442     I      4000 #>        [2]        I        1-8000      * |         0 0.0287442     I      4000 #>        [3]        I        1-8000      * |         0 0.0287442     I      4000 #>        [4]        I        1-8000      * |         0 0.0287442     I      4000 #>        [5]        I        1-8000      * |         0 0.0287442     I      4000 #>        ...      ...           ...    ... .       ...       ...   ...       ... #>   [801958]      XVI 920001-928000      * |      1513 0.0245536   XVI    924000 #>   [801959]      XVI 920001-928000      * |      1513 0.0245536   XVI    924000 #>   [801960]      XVI 928001-936000      * |      1514 0.0235127   XVI    932000 #>   [801961]      XVI 928001-936000      * |      1514 0.0235127   XVI    932000 #>   [801962]      XVI 936001-944000      * |      1515 0.0213994   XVI    940000 #>   ------- #>   seqinfo: 16 sequences from an unspecified genome #>  #> $second #> GRanges object with 801962 ranges and 4 metadata columns: #>            seqnames        ranges strand |    bin_id    weight   chr    center #>               <Rle>     <IRanges>  <Rle> | <numeric> <numeric> <Rle> <integer> #>        [1]        I        1-8000      * |         0 0.0287442     I      4000 #>        [2]        I    8001-16000      * |         1 0.0258423     I     12000 #>        [3]        I   16001-24000      * |         2 0.0183936     I     20000 #>        [4]        I   24001-32000      * |         3 0.0221529     I     28000 #>        [5]        I   32001-40000      * |         4 0.0166096     I     36000 #>        ...      ...           ...    ... .       ...       ...   ...       ... #>   [801958]      XVI 928001-936000      * |      1514 0.0235127   XVI    932000 #>   [801959]      XVI 936001-944000      * |      1515 0.0213994   XVI    940000 #>   [801960]      XVI 928001-936000      * |      1514 0.0235127   XVI    932000 #>   [801961]      XVI 936001-944000      * |      1515 0.0213994   XVI    940000 #>   [801962]      XVI 936001-944000      * |      1515 0.0213994   XVI    940000 #>   ------- #>   seqinfo: 16 sequences from an unspecified genome #>  regions(contacts) #> GRanges object with 1517 ranges and 4 metadata columns: #>                     seqnames        ranges strand |    bin_id    weight   chr #>                        <Rle>     <IRanges>  <Rle> | <numeric> <numeric> <Rle> #>            I_1_8000        I        1-8000      * |         0 0.0287442     I #>        I_8001_16000        I    8001-16000      * |         1 0.0258423     I #>       I_16001_24000        I   16001-24000      * |         2 0.0183936     I #>       I_24001_32000        I   24001-32000      * |         3 0.0221529     I #>       I_32001_40000        I   32001-40000      * |         4 0.0166096     I #>                 ...      ...           ...    ... .       ...       ...   ... #>   XVI_912001_920000      XVI 912001-920000      * |      1512 0.0122756   XVI #>   XVI_920001_928000      XVI 920001-928000      * |      1513 0.0245536   XVI #>   XVI_928001_936000      XVI 928001-936000      * |      1514 0.0235127   XVI #>   XVI_936001_944000      XVI 936001-944000      * |      1515 0.0213994   XVI #>   XVI_944001_948066      XVI 944001-948066      * |      1516       NaN   XVI #>                        center #>                     <integer> #>            I_1_8000      4000 #>        I_8001_16000     12000 #>       I_16001_24000     20000 #>       I_24001_32000     28000 #>       I_32001_40000     36000 #>                 ...       ... #>   XVI_912001_920000    916000 #>   XVI_920001_928000    924000 #>   XVI_928001_936000    932000 #>   XVI_936001_944000    940000 #>   XVI_944001_948066    946033 #>   ------- #>   seqinfo: 16 sequences from an unspecified genome  ##################################################################### ## ------------- Coercing HiCExperiment objects ------------------ ## #####################################################################  as(contacts, 'GInteractions') #> GInteractions object with 801962 interactions and 5 metadata columns: #>            seqnames1       ranges1     seqnames2       ranges2 |   bin_id1 #>                <Rle>     <IRanges>         <Rle>     <IRanges> | <numeric> #>        [1]         I        1-8000 ---         I        1-8000 |         0 #>        [2]         I        1-8000 ---         I    8001-16000 |         0 #>        [3]         I        1-8000 ---         I   16001-24000 |         0 #>        [4]         I        1-8000 ---         I   24001-32000 |         0 #>        [5]         I        1-8000 ---         I   32001-40000 |         0 #>        ...       ...           ... ...       ...           ... .       ... #>   [801958]       XVI 920001-928000 ---       XVI 928001-936000 |      1513 #>   [801959]       XVI 920001-928000 ---       XVI 936001-944000 |      1513 #>   [801960]       XVI 928001-936000 ---       XVI 928001-936000 |      1514 #>   [801961]       XVI 928001-936000 ---       XVI 936001-944000 |      1514 #>   [801962]       XVI 936001-944000 ---       XVI 936001-944000 |      1515 #>              bin_id2     count  balanced    random #>            <numeric> <numeric> <numeric> <numeric> #>        [1]         0       705  0.582493 0.0111381 #>        [2]         1      1260  0.935951 0.4709953 #>        [3]         2       557  0.294491 0.9338849 #>        [4]         3       274  0.174475 0.4480752 #>        [5]         4       291  0.138932 0.3849580 #>        ...       ...       ...       ...       ... #>   [801958]      1514       893  0.515549 0.0991976 #>   [801959]      1515       524  0.275326 0.2482757 #>   [801960]      1514      1317  0.728102 0.0265945 #>   [801961]      1515      1582  0.795995 0.6313247 #>   [801962]      1515      1409  0.645227 0.1196083 #>   ------- #>   regions: 1517 ranges and 4 metadata columns #>   seqinfo: 16 sequences from an unspecified genome as(contacts, 'ContactMatrix') #> class: ContactMatrix  #> dim: 1517 1517  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(0): #> regions: 1517 as(contacts, 'matrix')[seq_len(10), seq_len(10)] #> 10 x 10 sparse Matrix of class \"dgTMatrix\" #>                                                                         #>  [1,] 0.58249310 0.93595103 0.29449150 0.17447479 0.13893217 0.09970617 #>  [2,] 0.93595103 0.58167668 0.47153090 0.22269611 0.16139073 0.12650163 #>  [3,] 0.29449150 0.47153090 0.17119221 0.22492467 0.14572837 0.09093352 #>  [4,] 0.17447479 0.22269611 0.22492467 0.12661416 0.31091881 0.19533840 #>  [5,] 0.13893217 0.16139073 0.14572837 0.31091881 0.40002396 0.40626151 #>  [6,] 0.09970617 0.12650163 0.09093352 0.19533840 0.40626151 0.28033628 #>  [7,] 0.07443284 0.09628981 0.08017355 0.14042680 0.17496056 0.28222645 #>  [8,] 0.05510079 0.07961469 0.05603711 0.07924403 0.12479940 0.17533293 #>  [9,] 0.04456457 0.05371419 0.04230561 0.06416197 0.08546010 0.10963404 #> [10,] 0.01947702 0.02495274 0.01869518 0.02514303 0.03882842 0.05464144 #>                                                   #>  [1,] 0.07443284 0.05510079 0.04456457 0.01947702 #>  [2,] 0.09628981 0.07961469 0.05371419 0.02495274 #>  [3,] 0.08017355 0.05603711 0.04230561 0.01869518 #>  [4,] 0.14042680 0.07924403 0.06416197 0.02514303 #>  [5,] 0.17496056 0.12479940 0.08546010 0.03882842 #>  [6,] 0.28222645 0.17533293 0.10963404 0.05464144 #>  [7,] 0.25591092 0.37561957 0.17347572 0.09070876 #>  [8,] 0.37561957 0.47046086 0.37791267 0.14931650 #>  [9,] 0.17347572 0.37791267 0.35093060 0.28081603 #> [10,] 0.09070876 0.14931650 0.28081603 0.33402283 as(contacts, 'data.frame')[seq_len(10), seq_len(10)] #>    seqnames1 start1 end1 width1 strand1 bin_id1    weight1 center1 seqnames2 #> 1          I      1 8000   8000       *       0 0.02874424    4000         I #> 2          I      1 8000   8000       *       0 0.02874424    4000         I #> 3          I      1 8000   8000       *       0 0.02874424    4000         I #> 4          I      1 8000   8000       *       0 0.02874424    4000         I #> 5          I      1 8000   8000       *       0 0.02874424    4000         I #> 6          I      1 8000   8000       *       0 0.02874424    4000         I #> 7          I      1 8000   8000       *       0 0.02874424    4000         I #> 8          I      1 8000   8000       *       0 0.02874424    4000         I #> 9          I      1 8000   8000       *       0 0.02874424    4000         I #> 10         I      1 8000   8000       *       0 0.02874424    4000         I #>    start2 #> 1       1 #> 2    8001 #> 3   16001 #> 4   24001 #> 5   32001 #> 6   40001 #> 7   48001 #> 8   56001 #> 9   64001 #> 10  72001"},{"path":"/reference/HicFile-class.html","id":null,"dir":"Reference","previous_headings":"","what":"HicFile S4 class — HicFile-class","title":"HicFile S4 class — HicFile-class","text":"HicFile class describes BiocFile object, pointing location .hic file (usually created juicer) containing 3 additional slots: resolution: resolution associated .hic file parsed; pairsFile: path (plain character) optional pairs file (stored PairsFile object); metadata: list metadata HicFile methods.","code":""},{"path":"/reference/HicFile-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HicFile S4 class — HicFile-class","text":"path String; path .hic file resolution numeric; resolution use mcool file pairsFile String; path pairs file metadata list. object HicFile object.","code":""},{"path":[]},{"path":"/reference/HicFile-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HicFile S4 class — HicFile-class","text":"","code":"hicPath <- HiContactsData::HiContactsData('yeast_wt', 'hic') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache pairsPath <- HiContactsData::HiContactsData('yeast_wt', 'pairs.gz') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache hic <- HicFile(   hicPath,    resolution = 16000,    pairsFile = pairsPath,    metadata = list(type = 'example') ) hic #> HicFile object #> .hic file: /github/home/.cache/R/ExperimentHub/41730d6949_7836  #> resolution: 16000  #> pairs file: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(1): type resolution(hic) #> [1] 16000 pairsFile(hic) #>                                                 EH7703  #> \"/github/home/.cache/R/ExperimentHub/4172feea28a_7753\"  metadata(hic) #> $type #> [1] \"example\" #>"},{"path":"/reference/HicproFile-class.html","id":null,"dir":"Reference","previous_headings":"","what":"HicproFile S4 class — HicproFile-class","title":"HicproFile S4 class — HicproFile-class","text":"HicproFile class describes BiocFile object, pointing location HiC-Pro-generated matrix file containing 4 additional slots: bed: path matching .bed file generated HiC-Pro; resolution: resolution associated mcool file parsed ; pairsFile: path (plain character) optional pairs file (stored PairsFile object); metadata: list metadata HicproFile methods.","code":""},{"path":"/reference/HicproFile-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HicproFile S4 class — HicproFile-class","text":"path String; path HiC-Pro output .matrix file (matrix file) bed String; path HiC-Pro output .bed file (regions file) pairsFile String; path pairs file metadata list. object HicproFile object.","code":""},{"path":"/reference/HicproFile-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"HicproFile S4 class — HicproFile-class","text":"bed Path matching .bed file generated HiC-Pro","code":""},{"path":[]},{"path":"/reference/HicproFile-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HicproFile S4 class — HicproFile-class","text":"","code":"hicproMatrixPath <- HiContactsData::HiContactsData('yeast_wt', 'hicpro_matrix') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache hicproBedPath <- HiContactsData::HiContactsData('yeast_wt', 'hicpro_bed') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache pairsPath <- HiContactsData::HiContactsData('yeast_wt', 'pairs.gz') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache hicpro <- HicproFile(   hicproMatrixPath, bed = hicproBedPath, pairs = pairsPath ,   metadata = list(type = 'example') ) hicpro #> HicproFile object #> HiC-Pro files: #>   $ matrix:   /github/home/.cache/R/ExperimentHub/417304c9f09_7837  #>   $ regions:  /github/home/.cache/R/ExperimentHub/417588c191e_7838  #> resolution: 1000  #> pairs file: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  #> metadata(1): type resolution(hicpro) #> [1] 1000 pairsFile(hicpro) #>                                                 EH7703  #> \"/github/home/.cache/R/ExperimentHub/4172feea28a_7753\"  metadata(hicpro) #> $type #> [1] \"example\" #>"},{"path":"/reference/PairsFile-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PairsFile S4 class — PairsFile-class","title":"PairsFile S4 class — PairsFile-class","text":"PairsFile class describes BiocFile object, pointing location pairs file, typically generated HiCool::HiCool(). PairsFile methods","code":""},{"path":"/reference/PairsFile-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PairsFile S4 class — PairsFile-class","text":"x Path pairs file","code":""},{"path":[]},{"path":"/reference/PairsFile-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PairsFile S4 class — PairsFile-class","text":"","code":"pairsPath <- HiContactsData::HiContactsData('yeast_wt', 'pairs.gz') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache pf <- PairsFile(pairsPath) pf #> PairsFile object #> resource: /github/home/.cache/R/ExperimentHub/4172feea28a_7753  pairsFile(pf) #>                                                 EH7703  #> \"/github/home/.cache/R/ExperimentHub/4172feea28a_7753\""},{"path":"/reference/as.html","id":null,"dir":"Reference","previous_headings":"","what":"Coercing functions — as","title":"Coercing functions — as","text":"Coercing functions available HiCExperiment objects.","code":""},{"path":"/reference/as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coercing functions — as","text":"","code":"# S4 method for HiCExperiment as.matrix(x, use.scores = \"balanced\", sparse = TRUE)  # S4 method for HiCExperiment as.data.frame(x)  gi2cm(gi, use.scores = \"score\")  cm2matrix(cm, replace_NA = NA, sparse = FALSE)  df2gi(   df,   seqnames1 = \"seqnames1\",   start1 = \"start1\",   end1 = \"end1\",   seqnames2 = \"seqnames2\",   start2 = \"start2\",   end2 = \"end2\" )"},{"path":"/reference/as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coercing functions — as","text":"x HiCExperiment object use.scores scores use inflate GInteractions sparse Whether return contact matrix sparse matrix gi GInteractions object cm ContactMatrix object replace_NA Replace NA values df data.frame object seqnames1, start1, end1, seqnames2, start2, end2 Names (strings) columns containing corresponding information data.frame parsed GInteractions (default: FALSE)","code":""},{"path":"/reference/as.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coercing functions — as","text":"","code":"mcoolPath <- HiContactsData::HiContactsData('yeast_wt', 'mcool') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache contacts <- import(mcoolPath, focus = 'XVI', resolution = 16000, format = 'cool') gis <- interactions(contacts) cm <- gi2cm(gis, 'balanced') cm #> class: ContactMatrix  #> dim: 60 60  #> type: dgCMatrix  #> rownames: NULL #> colnames: NULL #> metadata(0): #> regions: 60 cm2matrix(cm)[1:10, 1:10] #>       [,1]       [,2]       [,3]       [,4]       [,5]       [,6]       [,7] #>  [1,]  NaN        NaN        NaN        NaN        NaN        NaN        NaN #>  [2,]  NaN 1.39502102 1.89623124 0.39560223 0.14820676 0.07426750 0.05980846 #>  [3,]  NaN 1.89623124 2.35751077 1.58129178 0.33905391 0.14339992 0.10552853 #>  [4,]  NaN 0.39560223 1.58129178 1.20960316 0.54168680 0.18242094 0.10413483 #>  [5,]  NaN 0.14820676 0.33905391 0.54168680 0.52832563 0.49867956 0.16116603 #>  [6,]  NaN 0.07426750 0.14339992 0.18242094 0.49867956 0.67745097 0.41256806 #>  [7,]  NaN 0.05980846 0.10552853 0.10413483 0.16116603 0.41256806 0.87399239 #>  [8,]  NaN 0.03340782 0.05614098 0.06121680 0.10343933 0.26074267 0.48711735 #>  [9,]  NaN 0.02780230 0.03659704 0.03372027 0.05460712 0.11214948 0.18101311 #> [10,]  NaN 0.02204195 0.03877495 0.02539418 0.02878660 0.04762856 0.08132232 #>             [,8]       [,9]      [,10] #>  [1,]        NaN        NaN        NaN #>  [2,] 0.03340782 0.02780230 0.02204195 #>  [3,] 0.05614098 0.03659704 0.03877495 #>  [4,] 0.06121680 0.03372027 0.02539418 #>  [5,] 0.10343933 0.05460712 0.02878660 #>  [6,] 0.26074267 0.11214948 0.04762856 #>  [7,] 0.48711735 0.18101311 0.08132232 #>  [8,] 0.59450224 0.52204112 0.16856414 #>  [9,] 0.52204112 0.61170845 0.48810265 #> [10,] 0.16856414 0.48810265 0.64767893 df2gi(data.frame(     chr1 = 'I', start1 = 10, end1 = 100,      chr2 = 'I', start2 = 40, end2 = 1000,      score = 12,      weight = 0.234,      filtered = TRUE ), seqnames1 = 'chr1', seqnames2 = 'chr2') #> GInteractions object with 1 interaction and 3 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 |     score    weight #>           <Rle> <IRanges>         <Rle> <IRanges> | <numeric> <numeric> #>   [1]         I    10-100 ---         I   40-1000 |        12     0.234 #>        filtered #>       <logical> #>   [1]      TRUE #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"/reference/checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks functions — checks","title":"Checks functions — checks","text":"Internal functions validate nature/structure (m)cool files HiCExperiment objects. check functions return logical.","code":""},{"path":"/reference/checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks functions — checks","text":"","code":".check_cool_file(path)  .check_cool_format(path, resolution, ...)  .is_mcool(path)  .is_cool(path)  .check_hic_file(path)  .check_hic_format(path, resolution, ...)  .is_hic(path)  .check_hicpro_files(path, bed)  .is_hicpro_matrix(path)  .is_hicpro_regions(bed)  .check_resolution(contacts, resolution)  .check_scores(contacts, use.scores)  .is_square(pair)"},{"path":"/reference/checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks functions — checks","text":"path Path (m)cool file resolution Resolution ... HiCExperiment object, arguments passed functions bed Path regions file generated HiC-Pro contacts HiCExperiment object use.scores Name scores check pair Pairs object length 1","code":""},{"path":"/reference/checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks functions — checks","text":"Logical","code":""},{"path":"/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example datasets provided in HiCExperiment & HiContactsData — data","title":"Example datasets provided in HiCExperiment & HiContactsData — data","text":"Example datasets provided HiCExperiment & HiContactsData","code":""},{"path":"/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example datasets provided in HiCExperiment & HiContactsData — data","text":"","code":"data(centros_yeast)  contacts_yeast(full = FALSE)  contacts_yeast_eco1(full = FALSE)"},{"path":"/reference/data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example datasets provided in HiCExperiment & HiContactsData — data","text":"object class \"GRanges\".","code":""},{"path":"/reference/data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example datasets provided in HiCExperiment & HiContactsData — data","text":"HiContacts","code":""},{"path":"/reference/data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example datasets provided in HiCExperiment & HiContactsData — data","text":"full Whether import interactions","code":""},{"path":"/reference/data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example datasets provided in HiCExperiment & HiContactsData — data","text":"","code":"data(centros_yeast) centros_yeast #> GRanges object with 16 ranges and 0 metadata columns: #>        seqnames        ranges strand #>           <Rle>     <IRanges>  <Rle> #>    [1]        I 151583-151641      + #>    [2]       II 238361-238419      + #>    [3]      III 114322-114380      + #>    [4]       IV 449879-449937      + #>    [5]        V 152522-152580      + #>    ...      ...           ...    ... #>   [12]      XII 151366-151424      + #>   [13]     XIII 268222-268280      + #>   [14]      XIV 628588-628646      + #>   [15]       XV 326897-326955      + #>   [16]      XVI 556255-556313      + #>   ------- #>   seqinfo: 17 sequences (1 circular) from R64-1-1 genome contacts_yeast() #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache #> `HiCExperiment` object with 8,757,906 contacts over 763 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"whole genome\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 16000  #> interactions: 267709  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0) centromeres(16)  #> pairsFile: N/A  #> metadata(0):"},{"path":"/reference/import-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"HiCExperiment import methods — import-methods","title":"HiCExperiment import methods — import-methods","text":"Import methods parse Hi-C files (.(m)cool, .hic, HiC-Pro derived matrices, pairs files) data structures implemented HiCExperiment package.","code":""},{"path":"/reference/import-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HiCExperiment import methods — import-methods","text":"","code":"import(con, format, text, ...)  # S4 method for ANY availableResolutions(x, ...)  # S4 method for CoolFile availableResolutions(x)  # S4 method for HicFile availableResolutions(x)  # S4 method for HicproFile availableResolutions(x)  # S4 method for ANY availableChromosomes(x, ...)  # S4 method for CoolFile availableChromosomes(x)  # S4 method for HicFile availableChromosomes(x)  # S4 method for HicproFile availableChromosomes(x)"},{"path":"/reference/import-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HiCExperiment import methods — import-methods","text":"... Extra parameters pass format-specific methods. list possible arguments provided next section. con, x Path connection cool, mcool, .hic HiC-Pro derived files. Can also path pairs file. format format output. missing 'con' filename, format derived file extension. argument unnecessary files directly provided CoolFile, HicFile, HicproFile PairsFile. text 'con' missing, can character vector directly providing string data import.","code":""},{"path":"/reference/import-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HiCExperiment import methods — import-methods","text":"HiCExperiment GInteractions object","code":""},{"path":"/reference/import-methods.html","id":"import-arguments-for-contactfile-class","dir":"Reference","previous_headings":"","what":"import arguments for ContactFile class","title":"HiCExperiment import methods — import-methods","text":"ContactFile class gathers CoolFile, HicFile HicproFile classes. importing ContactFile object R, two main arguments can provided besides ContactFile : resolution: Resolutions available disk-stored contact matrix can listed using availableResolutions(file) focus: genomic locus (pair loci) provided string. can following string structures: \"II\" \"II:20000-30000\": extract symmetrical square HiCExperiment object, entire chromosome portion . \"II|III\" \"II:20000-30000|III:40000-90000\": extract non-symmetrical HiCExperiment object, entire portion different chromosomes axis.","code":""},{"path":"/reference/import-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HiCExperiment import methods — import-methods","text":"","code":"################################################################ ## ----------- Importing .(m)cool contact matrices ---------- ## ################################################################  mcoolPath <- HiContactsData::HiContactsData('yeast_wt', 'mcool') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache availableResolutions(mcoolPath) #> resolutions(5): 1000 2000 4000 8000 16000 #>  availableChromosomes(mcoolPath) #> Seqinfo object with 16 sequences from an unspecified genome: #>   seqnames seqlengths isCircular genome #>   I            230218       <NA>   <NA> #>   II           813184       <NA>   <NA> #>   III          316620       <NA>   <NA> #>   IV          1531933       <NA>   <NA> #>   V            576874       <NA>   <NA> #>   ...             ...        ...    ... #>   XII         1078177       <NA>   <NA> #>   XIII         924431       <NA>   <NA> #>   XIV          784333       <NA>   <NA> #>   XV          1091291       <NA>   <NA> #>   XVI          948066       <NA>   <NA> import(mcoolPath, resolution = 16000, focus = 'XVI', format = 'cool') #> `HiCExperiment` object with 535,350 contacts over 60 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/4176f55f627_7752\"  #> focus: \"XVI\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 16000  #> interactions: 1731  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: N/A  #> metadata(0):  ################################################################ ## ------------ Importing .hic contact matrices ------------- ## ################################################################  hicPath <- HiContactsData::HiContactsData('yeast_wt', 'hic') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache availableResolutions(hicPath) #> resolutions(5): 1000 2000 4000 8000 16000 #>  availableChromosomes(hicPath) #> Seqinfo object with 17 sequences from an unspecified genome: #>   seqnames seqlengths isCircular genome #>   I            230218       <NA>   <NA> #>   II           813184       <NA>   <NA> #>   III          316620       <NA>   <NA> #>   IV          1531933       <NA>   <NA> #>   IX           439888       <NA>   <NA> #>   ...             ...        ...    ... #>   XII         1078177       <NA>   <NA> #>   XIII         924431       <NA>   <NA> #>   XIV          784333       <NA>   <NA> #>   XV          1091291       <NA>   <NA> #>   XVI          948066       <NA>   <NA> import(hicPath, resolution = 16000, focus = 'XVI', format = 'hic') #> `HiCExperiment` object with 838,222 contacts over 60 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/41730d6949_7836\"  #> focus: \"XVI\"  #> resolutions(5): 1000 2000 4000 8000 16000 #> active resolution: 16000  #> interactions: 1732  #> scores(2): count balanced  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: N/A  #> metadata(0):  ################################################################ ## ------- Importing HiC-Pro derived contact matrices ------- ## ################################################################  hicproMatrixPath <- HiContactsData::HiContactsData('yeast_wt', 'hicpro_matrix') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache hicproBedPath <- HiContactsData::HiContactsData('yeast_wt', 'hicpro_bed') #> snapshotDate(): 2023-02-28 #> see ?HiContactsData and browseVignettes('HiContactsData') for documentation #> loading from cache availableResolutions(hicproMatrixPath, hicproBedPath) #> [1] 1000 availableChromosomes(hicproMatrixPath, hicproBedPath) #> Seqinfo object with 17 sequences from an unspecified genome: #>   seqnames seqlengths isCircular genome #>   I            230218       <NA>   <NA> #>   II           813184       <NA>   <NA> #>   III          316620       <NA>   <NA> #>   IV          1531933       <NA>   <NA> #>   IX           439888       <NA>   <NA> #>   ...             ...        ...    ... #>   XII         1078177       <NA>   <NA> #>   XIII         924431       <NA>   <NA> #>   XIV          784333       <NA>   <NA> #>   XV          1091291       <NA>   <NA> #>   XVI          948066       <NA>   <NA> import(hicproMatrixPath, bed = hicproBedPath, format = 'hicpro') #> `HiCExperiment` object with 9,503,604 contacts over 12,165 regions  #> ------- #> fileName: \"/github/home/.cache/R/ExperimentHub/417304c9f09_7837\"  #> focus: \"whole genome\"  #> resolutions(1): 1000 #> active resolution: 1000  #> interactions: 2686250  #> scores(1): count  #> topologicalFeatures: compartments(0) borders(0) loops(0) viewpoints(0)  #> pairsFile: N/A  #> metadata(1): regions"},{"path":"/reference/multi2Query.html","id":null,"dir":"Reference","previous_headings":"","what":"Querying multiple slices of a contact matrix — multi2Query","title":"Querying multiple slices of a contact matrix — multi2Query","text":"functions workhorse internal functions used extract counts multiple genomic coordinates Hi-C contact matrix.","code":""},{"path":"/reference/multi2Query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Querying multiple slices of a contact matrix — multi2Query","text":"","code":".multi2DQuery(   file,   resolution,   pairs,   maxDistance = NULL,   bed = NULL,   BPPARAM = BiocParallel::bpparam() )"},{"path":"/reference/multi2Query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Querying multiple slices of a contact matrix — multi2Query","text":"file path Hi-C contact file (can format, (m)cool, .hic, HiC-Pro-derived) resolution resolution use import matrix specified targets pairs slices read, provided Pairs object maxDistance Maximum distance use compiling distance decay bed associated bed file HiC-Pro derived contact matrix. BPPARAM BiocParallel parameters","code":""},{"path":"/reference/multi2Query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Querying multiple slices of a contact matrix — multi2Query","text":"GInteractions object count, balanced, detrended expected scores","code":""},{"path":"/reference/parse-cool.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing (m)cool files — parse-cool","title":"Parsing (m)cool files — parse-cool","text":"functions workhorse internal functions used import .(m)cool file GInteractions (wrapped HiCExperiment object HiCExperiment() function).","code":""},{"path":"/reference/parse-cool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing (m)cool files — parse-cool","text":"","code":".getCoolAnchors(file, resolution = NULL, balanced = \"cooler\")  .getCountsFromPair(file, pair, anchors, resolution = NULL)  .getCounts(file, coords, anchors, resolution = NULL)  .fetchCool(file, path, resolution = NULL, idx = NULL, ...)  .dumpCool(file, resolution = NULL)  .lsCoolFiles(file, verbose = FALSE)  .lsCoolResolutions(file, verbose = FALSE)  .cool2seqinfo(file, resolution = NULL)  .cool2gi(file, coords = NULL, resolution = NULL)"},{"path":"/reference/parse-cool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing (m)cool files — parse-cool","text":"file path Hi-C contact file ((m)cool format) resolution resolution contact matrix balanced import balancing scores pair Genomic coordinates extract contacts , stored Pairs GRanges (e.g. S4Vectors::Pairs(GRanges(\"II:200000-300000\"), GRanges(\"II:70000-100000\"))). anchors anchors .getCoolAnchors() coords Genomic coordinates extract contacts , stored GRanges object path Internal path cool file check idx Index extract cool (HDF5) file ... arguments passed .fetchCool verbose Print resolutions console","code":""},{"path":"/reference/parse-cool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parsing (m)cool files — parse-cool","text":"Silently, numerical vector resolutions stored cool file","code":""},{"path":"/reference/parse-hic.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing hic files — parse-hic","title":"Parsing hic files — parse-hic","text":"functions workhorse internal functions used import .hic file GInteractions (wrapped HiCExperiment object HiCExperiment() function).","code":""},{"path":"/reference/parse-hic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing hic files — parse-hic","text":"","code":".hic2gi(file, coords = NULL, resolution = NULL)  .lsHicResolutions(file, verbose = FALSE)  .getHicAnchors(file, resolution = NULL)  .hic2seqinfo(file)  .dumpHic(file, resolution = NULL)"},{"path":"/reference/parse-hic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing hic files — parse-hic","text":"file path Hi-C contact file .hic format coords NULL, character, GRanges. Can also Pairs object paired GRanges (length 1). resolution resolution contact matrix use verbose Print resolutions console","code":""},{"path":"/reference/parse-hic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parsing hic files — parse-hic","text":"GInteractions object vector","code":""},{"path":"/reference/parse-hicpro.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing hicpro files (matrix & bed) — parse-hicpro","title":"Parsing hicpro files (matrix & bed) — parse-hicpro","text":"functions workhorse internal functions used import HiC-Pro .matrix .bed files GInteractions (wrapped HiCExperiment object HiCExperiment() function).","code":""},{"path":"/reference/parse-hicpro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing hicpro files (matrix & bed) — parse-hicpro","text":"","code":".hicpro2gi(file, bed)  .getHicproAnchors(bed)  .hicpro2seqinfo(bed)  .dumpHicpro(file, bed)"},{"path":"/reference/parse-hicpro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing hicpro files (matrix & bed) — parse-hicpro","text":"file path matrix file HiC-Pro bed path regions file generated HiC-Pro","code":""},{"path":"/reference/parse-hicpro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parsing hicpro files (matrix & bed) — parse-hicpro","text":"GInteractions object","code":""},{"path":"/reference/parse-pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairs parsing functions — .pairs2gi","title":"Pairs parsing functions — .pairs2gi","text":"Pairs parsing functions","code":""},{"path":"/reference/parse-pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairs parsing functions — .pairs2gi","text":"","code":".pairs2gi(   file,   chr1.field = NULL,   start1.field = NULL,   chr2.field = NULL,   start2.field = NULL,   strand1.field = NULL,   strand2.field = NULL,   frag1.field = NULL,   frag2.field = NULL,   nThread = 1,   nrows = Inf )"},{"path":"/reference/parse-pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairs parsing functions — .pairs2gi","text":"file pairs file. Default formatting <readname>\\t<chr1>\\t<start1>\\t<chr2>\\t<start2>. chr1.field, start1.field, chr2.field, start2.field, strand1.field, strand2.field, frag1.field, frag2.field Index column field contained pairs file. nThread Number CPUs use import pairs file R nrows Number pairs import","code":""},{"path":"/reference/parse-pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairs parsing functions — .pairs2gi","text":"GInteractions object","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. S4Vectors metadata","code":""},{"path":"/reference/utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Utils functions — HiCExperiment utils","title":"Utils functions — HiCExperiment utils","text":"Utilities facilitate parsing/handling coordinates, GInteractions, Pairs, ... functions exported.","code":""},{"path":"/reference/utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utils functions — HiCExperiment utils","text":"","code":"splitCoords(coords)  coords2char(coords, big.mark = \",\")  char2coords(char)  sortPairs(pairs)  asGInteractions(df)  sdiag(A, k = 0)  .df2symmmat(diag, score)  distanceDecay(dump, threshold = NULL)  detrendingModel(file, resolution)  .fixRegions(gis, bins, coords)"},{"path":"/reference/utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utils functions — HiCExperiment utils","text":"coords set genomic coordinates (either GRanges object character string) big.mark Separator thousands printing genomic coordinates character char char (e.g. \"II:30000-50000\" \"II:30000-50000|II:60000-80000\") pairs Pairs object df data.frame turn GInteraction object. Numerical matrix k secondary diagonal k diag vector distances diagonal score scores parse symmetrical matrix dump dumped contacts GInteractions, e.g. .dumpCool threshold maximum distance compute distance decay file path HiC contact matrix file resolution Resolution use HiC contact matrix file gis GInteractions object bins Larger set regions (usually bins HiCExperiment)","code":""},{"path":"/reference/utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utils functions — HiCExperiment utils","text":"Reformatted coordinates GInteractions.","code":""}]
